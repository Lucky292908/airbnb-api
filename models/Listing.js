// models/Listing.js
const mongoose = require('mongoose');

const listingSchema = new mongoose.Schema({
    id: Number,
    listing_url: String,
    scrape_id: Number,
    last_scraped: Date,
    source: String,
    name: String,
    description: String,
    neighborhood_overview: String,
    picture_url: String,
    host_id: Number,
    host_url: String,
    host_name: String,
    host_since: Date,
    host_location: String,
    host_about: String,
    host_response_time: String,
    host_response_rate: String,
    host_acceptance_rate: String,
    host_is_superhost: String,
    host_thumbnail_url: String,
    host_picture_url: String,
    host_neighbourhood: String,
    host_listings_count: Number,
    host_total_listings_count: Number,
    host_verifications: [String],
    host_has_profile_pic: String,
    host_identity_verified: String,
    neighborhood: String,
    neighborhood_cleansed: String,
    neighborhood_group_cleansed: String,
    latitude: Number,
    longitude: Number,
    property_type: String,
    room_type: String,
    accommodates: Number,
    bathrooms: Number,
    bathrooms_text: String,
    bedrooms: Number,
    beds: Number,
    amenities: [String],
    price: Number,
    minimum_nights: Number,
    maximum_nights: Number,
    minimum_minimum_nights: Number,
    maximum_minimum_nights: Number,
    minimum_maximum_nights: Number,
    maximum_maximum_nights: Number,
    minimum_nights_avg_ntm: Number,
    maximum_nights_avg_ntm: Number,
    calendar_updated: String,
    has_availability: String,
    availability_30: Number,
    availability_60: Number,
    availability_90: Number,
    availability_365: Number,
    calendar_last_scraped: Date,
    number_of_reviews: Number,
    number_of_reviews_ltm: Number,
    number_of_reviews_l30d: Number,
    first_review: Date,
    last_review: Date,
    review_scores_rating: Number,
    review_scores_accuracy: Number,
    review_scores_cleanliness: Number,
    review_scores_checkin: Number,
    review_scores_communication: Number,
    review_scores_location: Number,
    review_scores_value: Number,
    license: String,
    instant_bookable: String,
    calculated_host_listings_count: Number,
    calculated_host_listings_count_entire_homes: Number,
    calculated_host_listings_count_private_rooms: Number,
    calculated_host_listings_count_shared_rooms: Number,
    reviews_per_month: Number
});

listingSchema.index({ name: 'text', description: 'text' });

module.exports = mongoose.model('Listing', listingSchema);
